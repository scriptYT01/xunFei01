#common makefile header

DIR_INC = ./
DIR_INC = ./include

DIR_BIN = ./
DIR_BIN = bin/
DIR_LIB = ./

TARGET	= aiui_sample32.i386.bin
BIN_TARGET = $(DIR_BIN)/$(TARGET)

define  RUN01
#!/bin/sh

if [ ! -d aiui_sample/build/ ]
then
	echo 
	echo ' dir error ' 
	echo 
fi

cd aiui_sample/build/ 

if [ ! -f ../../bin/$(TARGET) ]
then
	echo	
	echo " file <../../bin/$(TARGET)> don't exist "
	echo	
	exit
fi

echo
echo `realpath ../../bin/$(TARGET)`
echo

chmod -R a+w . 2>/dev/null

LD_LIBRARY_PATH=../../      ../../bin/$(TARGET)

endef
export  RUN01

CROSS_COMPILE = 
CFLAGS = -g -Wall -I$(DIR_INC) -I.

ifdef LINUX64
LDFLAGS := -L$(DIR_LIB)/x64
else
LDFLAGS := -L$(DIR_LIB)/x86 
endif
LDFLAGS := -L./

#LDFLAGS += -lmsc -lrt -ldl -lpthread
#LDFLAGS += -lmsc 
#LDFLAGS += -lmsc -Werror
#LDFLAGS += -lmsc -Werror -lstdc++ -laiui 
LDFLAGS += -lmsc -laiui -Werror -lstdc++ -lpthread

OBJECTSsrc := $(wildcard aiui_sample/src/*.cpp) $(wildcard aiui_sample/src/jsoncpp/*.cpp) 
OBJECTS := $(patsubst %.cpp,%.o,$(OBJECTSsrc))

$(BIN_TARGET) : $(OBJECTS)
	$(CROSS_COMPILE)gcc $(CFLAGS) $^ -o $@ $(LDFLAGS)
	echo "$${RUN01}" > run.sh
	chmod 755 run.sh
	chmod -R a+w bin/

%.o : %.cpp
	sed -i -e 's;\.\./\.\./;./;g'   $<
	$(CROSS_COMPILE)gcc -c $(CFLAGS) $< -o $@
clean:
	@rm -f *.o $(BIN_TARGET)
c:
	rm -f $(OBJECTS)
m:
	vim Makefile

.PHONY:clean

#common makefile foot
