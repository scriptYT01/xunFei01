#common makefile header

DIR_INC = ./
DIR_INC = ./include

DIR_BIN = ./
DIR_BIN = bin/
DIR_LIB = ./

TARGET	= aiui_sample32.i386.bin
BIN_TARGET = $(DIR_BIN)/$(TARGET)

define  RUN01
#!/bin/sh

if [ ! -d aiui_sample/build/ ]
then
	echo 
	echo ' dir error ' 
	echo 
fi

[ -L w12 ] 		|| ln -s ../XFi386DST18/w12/ 	./
[ -L bin/w12 ] 	|| ln -s ../w12/ 			  	./bin/

cd aiui_sample/build/ 
[ -L w12 ] 	|| ln -s ../../w12/ 		./

if [ ! -f ../../bin/$(TARGET) ]
then
	echo	
	echo " file <../../bin/$(TARGET)> don't exist "
	echo	
	exit
fi

echo
echo `realpath ../../bin/$(TARGET)`
echo

chmod -R a+w . 2>/dev/null

LD_LIBRARY_PATH=../../      time ../../bin/$(TARGET)    $$*

endef
export  RUN01

CROSS_COMPILE = 
CFLAGS = -g -Wall -I$(DIR_INC) -I.

ifdef LINUX64
LDFLAGS := -L$(DIR_LIB)/x64
else
LDFLAGS := -L$(DIR_LIB)/x86 
endif
LDFLAGS := -L./

LDFLAGS01:=		   \
	/usr/lib/i386-linux-gnu/libpthread.a \
	/usr/lib/gcc/i686-linux-gnu/5/libstdc++.a \
	/usr/lib/i386-linux-gnu/libdl.a \
	/usr/lib/i386-linux-gnu/libc.a 
LDFLAGS02:=		   \
	-lstdc++ -lpthread -ldl -lc
LDFLAGS03:=		   \
	/usr/lib/gcc/i686-linux-gnu/5/libstdc++.a \
	-lpthread -ldl -lc

#LDFLAGS += -lmsc -lrt -ldl -lpthread
#LDFLAGS += -lmsc 
#LDFLAGS += -lmsc -Werror
#LDFLAGS += -lmsc -Werror -lstdc++ -laiui 
LDFLAGS += -lmsc -laiui -Werror    $(LDFLAGS03)


OBJECTSsrc := \
	$(wildcard *.c) \
	$(wildcard aiui_sample/src/*.c) \
	$(wildcard aiui_sample/src/*.cpp) \
	$(wildcard aiui_sample/src/jsoncpp/*.cpp) 
OBJECTS := $(patsubst %.c,%.o,$(patsubst %.cpp,%.o,$(OBJECTSsrc)))

GBpath:=$(realpath ../../GccBin)
ifneq (,$(wildcard ../../GccBin))
gccPATH:= \
	LD_LIBRARY_PATH=$(GBpath)/__gmp-6.1.2/lib:$(GBpath)/__mpfr-3.1.5/lib:$(GBpath)/__mpc-1.0.3/lib:$(GBpath)/__gcc-4.8.5/lib \
	PATH=$(GBpath)/Bin:$${PATH} 
gccINC01:= 
else
gccPATH:= 
gccINC01:= 
endif
$(BIN_TARGET) : $(OBJECTS)
	$(gccPATH) $(CROSS_COMPILE)gcc $(CFLAGS) $(gccINC01) $^ -o $@ $(LDFLAGS)
	echo "$${RUN01}" > run.sh
	chmod 755 run.sh
	chmod -R a+w bin/
	@echo ; echo gcc $(OBJECTSsrc)  $(CFLAGS)  -o $@.static $(LDFLAGS) 
	@echo ; echo './run.sh  w12/tianQi21.wav.wav'
	@echo

%.o : %.cpp
	sed -i -e 's;\.\./\.\./;./;g'   $<
	$(gccPATH) $(CROSS_COMPILE)gcc -c $(CFLAGS) $(gccINC01) $< -o $@
%.o : %.c
	$(gccPATH) $(CROSS_COMPILE)gcc -c $(CFLAGS) $(gccINC01) $< -o $@
clean:
	@rm -f *.o $(BIN_TARGET) $(OBJECTS)
c:
	rm -f $(OBJECTS)
m:
	vim Makefile

.PHONY:clean

#common makefile foot
